Глава4 страница 94 06.07

Авторизация пользователей:
Создаём новый проект и сразу делаем формочку. Наш проект в installed Apps должен быть в самом верху.
В джанго есть специальные библы для логирования: создадим папку registration и в ней будет login, logged_out
html файлы, они будут подхватыватся автоматически из account.urls.py как две функции. Названия так же важно указать, их
мы добавим в настройки  LOGIN_REDIRECT_URL/LOGIN_URL/LOGOUT_URL -> отвечает за то, в какие именованные ссылки нас отправит
если е указана_страница_редирекста(next=/)/если_мы_зашли_логинится/разлогинится. Название login2 для примера.

Все методы для работы уже давно добавлены в Django, надо только подобавлять им ссылки и немного запарится с пространством
имён. Помимо этого, добавлен тег с if else в pass_reset_done ( но он нрмально не работает, так что просто для примера)
Так же, для отправки по почте надо было добавить пару паараметров в настройки касательно почты. Заработал только
mail.ru, yandex сказал, что я бот. Вообще везде рекомендуют использовать MailGun
Регистрация добавляется так же.

    Класс поверх User -> Profile [120 страница 08.07]
Создаём новый обьект модели и соединяем его с User one to one. Добавим ему дату рождения и Аву.
Ава = картинки. Для картинок нужна библа pip install Pillow. Так же подключаем в настройки на путь к статикам.
(работает только в дебаге тру, как раотать в пробакшене будет в 14 главе). Дальше makemigrations/migrate.
Создаём 2 формы, одну на User, вторую на Profile. Так же в админ панели добдобвавляем profile от текущих Users.
Далее при регистрации это будет делаться автоматически. В html файле указываем отстутсиве кодировки для POST запроса,
это необходиом при отправке файлов.

    Вставим свою штуку для отправки фото <img src="{% get_photo request.user.profile.photo.url %}">. Так же в
в моделе обозначим, что дефолтная фотка = пустая фотка. Так же функция будет создавать фото по пути нашего аккаунта
помимо этого, сделаем save фотографии при её принятии.

    Сообщения от сайта 125 12.07

    Взял, messages.success(request, 'Profile updated '\
 'successfully') добавил в view. И обработал. Пример обработки в base.html

    Социальные сети 130 13.07 https://python-social-auth.readthedocs.io/en/latest/backends/index.html#supported-backends
pip install social-auth-app-django
Apps += 'social_django', и потом python manage.py migrate чтобы синхранизировать

Добавим FaceBook Google Twitter.
'social_core.backends.facebook.FacebookOAuth2', в раздел AUTHENTICATION_BACKENDS
Заходим на сайт, создаём приложение. ПОлучаем ключи и секреты, записываем в настройки, добавляем домен сайта.

В настройках продукта ставим настройки
• Client OAuth Login да
• Web OAuth Login да
• Enforce HTTPS да
• Embedded Browser OAuth Login да

Ну а дальше сосём бибу я не знаю что не так... Зато работает вк


Глава 6 187 15 07
Добавим подписки. Так называемые промежуточные обьекты позволяют настраивать более сложные отношения между пользователями,
создадим Contact обьект, в котором лежит время и от кого к кому. Так же мы динамисески добавим поле following через
Contact ко всем User.
    Создадим вьюшки и url. Мы уже переопределяли раньше get_absolute_url, поэтому в этот раз сделаем по-другому,
добавим в настройках переопределитель url
from django.urls import reverse_lazy
ABSOLUTE_URL_OVERRIDES = {
 'auth.user': lambda u: reverse_lazy('user_detail',
 args=[u.username])
}

И теперь создадим html и ответы на ajax для подписки.
